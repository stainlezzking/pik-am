<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>  Sign into your dashboard || PIK Assets management Real Estate </title>
    <link href="/css/bootstrap.min.css" rel="stylesheet" >
    <link rel="stylesheet" href="/css/themify-icons.css">
    <link rel="stylesheet" href="/css/style.css">

    <!-- Javascript Assets -->
    <script src="/limestone/js/app.js" defer></script>
    
    <style>
        .strokeLine {
            border-top: 0px;
            border-inline: 0px;
            background: transparent;
        }
        .bg_dot{
            background: url("/img/dot.jpg");
        }
        .bg{
            background: url("/img/moving.jpeg");
            background-repeat: no-repeat;
            background-size: cover;
            background-position: left;
        }
        .form-control:focus {
            color: #212529;
            background-color: #fff;
            border-color: none;
            outline: 0;
            box-shadow: none;
        }
/* .otp-input-fields {
  margin: auto;
  background-color: white;
  box-shadow: 0px 0px 8px 0px #02025044;
  width: 100%;
  display: flex;
  justify-content: center;
  gap: 10px;
  padding: 40px;
} */
.otp-input-fields input {
  height: 40px;
  width: 40px;
  background-color: transparent;
  border-radius: 4px;
  border: 1px solid #2f8f1f;
  text-align: center;
  outline: none;
  font-size: 16px;
  /* Firefox */
}
.otp-input-fields input::-webkit-outer-spin-button, .otp-input-fields input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.otp-input-fields input[type=number] {
  -moz-appearance: textfield;
}
.otp-input-fields input:focus {
  border-width: 2px;
  border-color: #287a1a;
  font-size: 20px;
}
.sizex100{
    width: 150px;
}

/* line starts for animation switch */

.login_body{
    background: url('/img/dot.jpg');
}
.login_body #login{
    display: block !important;
}
.login_body #register, .login_body #OTP{
    display: none !important;
}

#error{
  opacity: 0;
  transition: opacity .4s ease-out;
}
.wait{
  cursor: not-allowed;
  color: black;
}
/* ############ */
    </style>
</head>
<body>
  <% if(messages.error){%>
    <div class="toast position-fixed show end-0" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <span class="svg-icon svg-icon-2 svg-icon-primary me-3">...</span>
        <strong class="me-auto">authentication error</strong>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">
        <%= messages.error %>
      </div>
    </div>
 <% } %>

  <div class="container-fluid vh-100 ">
    <div class="row h-100  align-items-center">
      
      <form class="col-md-6 col-lg-5 px-md-3 px-lg-5"
      action="/dashboard/auth/register"
      method="POST"
      >
      
      <div  id="register">
        <div class="sizex100 text-center my-5 mx-auto">
         <a href="/pik-home/">
          <svg viewBox="0 0 52 21"><path d="M0 0H9.18478C11.1442 0 12.8163 0.359333 14.2011 1.078C15.5859 1.79667 16.6409 2.786 17.3663 4.046C18.0917 5.306 18.4543 6.75733 18.4543 8.4C18.4543 10.08 18.0822 11.5593 17.338 12.838C16.5938 14.1167 15.5341 15.1153 14.1587 15.834C12.7833 16.5527 11.1442 16.912 9.2413 16.912H6.07609V21H0V0ZM6.07609 5.18V11.732H8.73261C9.91957 11.732 10.8051 11.4053 11.3891 10.752C11.9732 10.0987 12.2652 9.31467 12.2652 8.4C12.2652 7.448 11.9685 6.67333 11.375 6.076C10.7815 5.47867 9.90072 5.18 8.73261 5.18H6.07609ZM20.5174 0H26.5935V21H20.5174V0ZM35.4957 12.544V21H29.4196V0H35.4957V8.708L42.7587 0H49.8522L41.2043 10.192L52 21H43.8326L35.4957 12.544Z" fill="#FC4C02"></path></svg>
         </a> 
        </div>
        <h2 class="text-center"> Create your free account</h2>
                <h4 class="text-center fs-6 text-black-50" id="error"> No error </h4>
                    <div class="row g-3 my-2 my-md-3">
                        <div class="col form-floating">
                            <input type="text"  name="fname" class="form-control strokeLine" required aria-required="true" placeholder="First name" aria-label="First name">
                            <label for="floatingPassword">First Name *</label>
                        </div>
                        <div class="col form-floating">
                            <input type="text" name="lname" class="form-control strokeLine" aria-required="true" required placeholder="First name" aria-label="First name">
                            <label for="floatingPassword">Last Name * </label>
                        </div>
                      </div>
                      <div class="form-floating mb-2">
                        <input type="email" name="email" class="form-control strokeLine" required aria-required="true"  placeholder="Email Address">
                        <label for="floatingPassword">Email Address *</label>
                      </div>
                      <div class="form-floating mb-2">
                        <input type="password" name="password" class="form-control strokeLine" required placeholder="Password">
                        <label for="floatingPassword">Password *</label>
                      </div>
                      <div class="text-center my-3">
                        <button type="submit" class="btn_1 px-4 py-3 px-md-5 py-md-3" id="next_otp">
                            Next > 
                        </button>
                    </div>
                    <p class="mb-5">
                        don't have an account ? <a href="/pik-home/login" >  Sign in</a>
                    </p>
                    <p class="pt-2">
                        <small> By signing up with PIK-AM, you agree with our <a href="#">terms and regulations</a></small>
                    </p>
          </div>
        
          <div class=" d-none " id="OTP">
              <div class="sizex100 text-center my-5 mx-auto">
                  <svg viewBox="0 0 52 21"><path d="M0 0H9.18478C11.1442 0 12.8163 0.359333 14.2011 1.078C15.5859 1.79667 16.6409 2.786 17.3663 4.046C18.0917 5.306 18.4543 6.75733 18.4543 8.4C18.4543 10.08 18.0822 11.5593 17.338 12.838C16.5938 14.1167 15.5341 15.1153 14.1587 15.834C12.7833 16.5527 11.1442 16.912 9.2413 16.912H6.07609V21H0V0ZM6.07609 5.18V11.732H8.73261C9.91957 11.732 10.8051 11.4053 11.3891 10.752C11.9732 10.0987 12.2652 9.31467 12.2652 8.4C12.2652 7.448 11.9685 6.67333 11.375 6.076C10.7815 5.47867 9.90072 5.18 8.73261 5.18H6.07609ZM20.5174 0H26.5935V21H20.5174V0ZM35.4957 12.544V21H29.4196V0H35.4957V8.708L42.7587 0H49.8522L41.2043 10.192L52 21H43.8326L35.4957 12.544Z" fill="#FC4C02"></path></svg>
                </div>
              <div class="d-flex justify-content-center align-items-center">
                  <div class="position-relative">
                      <div class="card text-center py-3 py-md-5 px-3">
                          <span class="ti-email my-2" style="font-size: 40px;"></span>
                          <h4>Email Verification</h4>
                        <h4 class="text-center fs-6 text-black-50" id="invalid_otp"> </h4>
                          <div> <span>A code has been sent to your email</span> <small id="email_placeholder">*******@gmail.com</small> </div>
                          <div class="otp-input-fields my-3" id="OTP_wrapper" >
                              <input type="number" class="otp__digit otp__field__1">
                              <input type="number" class="otp__digit otp__field__2">
                              <input type="number" class="otp__digit otp__field__3">
                              <input type="number" class="otp__digit otp__field__4">
                              <input type="number" class="otp__digit otp__field__5">
                              <input type="number" class="otp__digit otp__field__6">
                            </div>
                          <div class="mt-4">
                                  <button id="submit" class="btn_1 px-4 validate">Validate</button> 
                              </div>
                      </div>
                      <div class="card-2">
                          <div class="content d-flex justify-content-center align-items-center my-3"> 
                              <span>Didn't get the code ? </span> 
                              <a id="resend_click" href="#" class="mx-2 primary_colorr wait">Resend</a>
                              <span id="timer"> 00:00 </span>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
      </form>
   
      <div class="d-none d-md-block col bg h-100" id="auth_image">

      </div>
        </div>

    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<script>

    var otp_inputs = document.querySelectorAll(".otp__digit")
var mykey = "0123456789".split("")
otp_inputs.forEach((_)=>{
  _.addEventListener("keyup", handle_next_input)
})
function handle_next_input(event){
  let current = event.target
  let index = parseInt(current.classList[1].split("__")[2])
  current.value = event.key
  
  if(event.keyCode == 8 && index > 1){
    current.previousElementSibling.focus()
  }
  if(index < 6 && mykey.indexOf(""+event.key+"") != -1){
    var next = current.nextElementSibling;
    next.focus()
  }
  var _finalKey = ""
  for(let {value} of otp_inputs){
      _finalKey += value
  }
  if(_finalKey.length == 6){
    document.querySelector("#_otp").classList.replace("_notok", "_ok")
    document.querySelector("#_otp").innerText = _finalKey
  }else{
    document.querySelector("#_otp").classList.replace("_ok", "_notok")
    document.querySelector("#_otp").innerText = _finalKey
  }
}

// deside the page to to show
// next button section to input otp
const nextB = document.getElementById("next_otp")


// resend duration
let time ;
let otp_feedback_input ;
let countdown;

let timerOutput = document.getElementById("timer")
  const timerFunction = function(){
    timerOutput.innerHTML = `(0${Math.floor(time/60)}:${(time%60).toString().length < 2 ?  "0"+ time%60 : time%60})`
    console.log((time/60),(time%60))
    if((time/60 )<= 0 && (time%60 <= 0)) {
       clearInterval(countdown)
       document.getElementById("resend_click").addEventListener("click", resendOTP)
       document.getElementById("resend_click").classList.remove("wait")
    }
    time--;
  }
const Register = async function(e){

  if(e.submitter.getAttribute("id")=="submit"){
    //  do sometihng to check the validity of the form
    const OTP_wrapper = document.querySelectorAll("#OTP_wrapper input")
    let otp_input_value = ""
    OTP_wrapper.forEach(otp_input=> otp_input_value += otp_input.value)
    if(Number(otp_input_value) === Number(otp_feedback_input)){
      // submit the form
        return null
      }
      // display error
      showError({invalid : true, error : "Invalid pin"})
      return e.preventDefault()
  }
  
  e.preventDefault()
  const email  = document.querySelector("#register input[type='email']").value
  nextB.disabled = true;
  nextB.innerHTML = `<div class="text-center">
                          <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                          </div>
                        </div>`
  const res = await sendOTP({email})
  console.log(res)
  nextB.disabled = false
  if(res.error){
    nextB.innerHTML = "Retry >"
     return showError(res)
   }
   nextB.innerHTML = "Next >"
   otp_feedback_input = res.OTP
   
  //  OTP countdown
  time = 4*60;
  countdown = setInterval(timerFunction, 1000)

      // // show the OTP section
  document.getElementById("register").classList.add("d-none")
  document.getElementById("OTP").classList.remove("d-none")
  document.getElementById("email_placeholder").innerHTML = email

}
const showError = function(e){
  (e.invalid)
    const error = Boolean(e.invalid) ? document.getElementById("invalid_otp") : document.getElementById("error")
    error.innerHTML = e.error
    error.style.opacity = 1
    return null
}


const sendOTP = function(e){
  console.log("sending OTP1111")
   return fetch("/dashboard/auth/OTP", {
        method : "POST",
        headers : {"Content-Type" : "application/json"},
        body : JSON.stringify(e)
    })
    .then(res=> res.json()).then(res=> res)
    .catch(err=> {
      showError({error : "an error occured, please refresh page"})
      nextB.innerHTML = `Retry >`
    })
}

const resendOTP = function(){
  const email = document.querySelector("#register input[type='email']").value
    return sendOTP({email})
    .then(d=>{
      time = 4*60
      otp_feedback_input = d.OTP
      document.getElementById("resend_click").removeEventListener("click", resendOTP)
      document.getElementById("resend_click").classList.add("wait")
      countdown = setInterval(timerFunction, 1000)
    })
}


document.querySelector("form").addEventListener("submit", Register)
    </script>
</body>
</html>